{"version":3,"sources":["../../src/definitions/index.js","../../src/components/styled.jsx","../../src/components/Tabs.js","../../src/components/Panel.js","../../src/components/propertyBrowser.jsx","../../src/components/control-template.js","../../src/components/accordion.js","../../src/themes/dark.jsx","../../src/themes/chalk.jsx","../../src/CssBuilder.jsx","App.js","index.js"],"names":["Templates","a","fadeIn","keyframes","CBSimpleButton","styled","theme","CBAccordion","CBToolbarButton","CBToolbarAnchor","CBGridRow","CBGridCell","CBInput","CBSelect","CBHelpTip","modalShowStyle","css","CBModal","props","CBAttributeRow","CBTabContainer","CBFilterInput","CBTab","CBTabPanelList","Tabs","state","selected","handleChange","this","index","render","children","map","key","onClick","elem","React","Component","Panel","console","PropertyBrowser","onChange","onClose","show","useState","sortedProps","setSortedProps","useEffect","res","prepareList","list","t","Object","result","e","style","display","height","flex","React.createElement","type","value","placeholder","val","title","cati","overflow","indexi","ci","width","c","ControlTemplate","field","fieldData","setFieldData","subFiledValues","onPropertyValueChange","v","JSON","onSubControlValueChanged","control","f","i","j","getControl","output","className","o","oi","id","name","checked","for","padding","border","min","max","fontWeight","href","target","obj","getSubControls","allcontrols","gridTemplateColumns","Accordion","componentWillReceiveProps","componentWillUnmount","clearTimeout","toggle","content","nodes","setTimeout","getHeight","length","ref","transition","transitionTimingFunction","div","boxSizing","justifyContent","alignItems","child","transitionDuration","openClassName","changeOnClick","meta","displayName","colors","background","color","borderDark","highlight","button","borderColor","accordion","shadow","CSSBuilder","inline","baseTheme","themeOverride","config","allProps","setAllProps","showPropertyBorwser","setShowPropertyBorwser","selectedProperty","setSelectedProperty","selectedIndex","setSelectedIndex","finalTheme","setFinalTheme","loading","setLoading","defaultTheme","Themes","oTheme","fireOnChange","styles","resStyle","styleName","row","match","group1","styleValue","flexDirection","data-header","prop","help-link","on-remove-clicked","on-change-clicked","controlindex","rowindex","App","setVal","class","without","rel","stringify","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.336ff386.chunk.js","sourcesContent":["import b from './b.json';\r\nimport c from './c.json';\r\nimport d from './d.json';\r\nimport t2 from './definitions.json';\r\n\r\nimport a from './a.json'\r\n\r\nexport const Templates = a.concat(b, c, d);","import styled, { keyframes, css } from 'styled-components'\r\n\r\nconst fadeIn = keyframes`\r\n  0% {\r\n    opacity: 0;\r\n  }\r\n  100% {\r\n    opacity: 100%;\r\n  }\r\n`\r\n\r\nexport const CBSimpleButton = styled.input`\r\n  width: 10%;\r\n  padding: 1.5em auto;\r\n  margin: 1em auto;\r\n  background-color: transparent;\r\n  border: none;\r\n  border-radius: 3px;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.5em;\r\n  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);\r\n  cursor: pointer;\r\n  border: 1px solid ${({ theme }) => theme.colors.button.borderColor};\r\n  color: ${({ theme }) => theme.colors.color};\r\n  &:hover {\r\n    letter-spacing: 0.8em;\r\n    border-left: 10px solid ${({ theme }) => theme.colors.button.borderColor};\r\n  }\r\n`\r\n\r\nexport const CBAccordion = styled.div`\r\n  color: ${({ theme }) => theme.colors.color};\r\n  > div > div:first-of-type {\r\n    padding: 1em;\r\n    color: ${({ theme }) => theme.colors.color};\r\n    text-transform: uppercase;\r\n    user-select: none;\r\n    font-weight: 200;\r\n    cursor: pointer;\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n    border: 1px solid ${({ theme }) => theme.colors.accordion.border};\r\n  }\r\n  > div > div:last-of-type {\r\n    background-color: ${({ theme }) => theme.colors.accordion.background};\r\n    margin: 0 0.5em;\r\n    box-shadow: 0 0 20px 2px ${({ theme }) => theme.colors.accordion.shadow};\r\n  }\r\n  .cb_accordion_item {\r\n    padding: 1em;\r\n    // opacity: 0;\r\n    transition: opacity 300ms ease;\r\n    overflow: auto;\r\n  }\r\n  > div:first-child .cb_accordion_item {\r\n    max-height: 200px;\r\n  }\r\n  > div.open .cb_accordion_item {\r\n    opacity: 1;\r\n    transition: opacity 700ms ease;\r\n  }\r\n  img.cb_accordion_item {\r\n    padding: 0;\r\n    margin: 0;\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nexport const CBToolbarButton = styled.button`\r\n  padding: 4px 10px;\r\n  font: 13px 'Montserrat';\r\n  font-weight: 700;\r\n  letter-spacing: 2px;\r\n  text-transform: uppercase;\r\n  text-decoration: none;\r\n  text-align: center;\r\n  opacity: 0.5;\r\n  color: ${({ theme }) => theme.colors.color};\r\n  background-color: transparent;\r\n  transition: 0.2s ease-in-out;\r\n  border: 0;\r\n  border-bottom: transparent 3px solid;\r\n  border-radius: 0px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    opacity: 1;\r\n    background-color: transparent;\r\n    border-bottom: ${({ theme }) => theme.colors.color} 3px solid;\r\n  }\r\n`\r\nexport const CBToolbarAnchor = styled.a`\r\n  padding: 4px 10px;\r\n  font: 13px 'Montserrat';\r\n  font-weight: 700;\r\n  letter-spacing: 2px;\r\n  text-transform: uppercase;\r\n  text-decoration: none;\r\n  text-align: center;\r\n  opacity: 0.5;\r\n  color: ${({ theme }) => theme.colors.color};\r\n  background-color: transparent;\r\n  transition: 0.2s ease-in-out;\r\n  border: 0;\r\n  border-bottom: transparent 3px solid;\r\n  border-radius: 0px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    opacity: 1;\r\n    background-color: transparent;\r\n    border-bottom: ${({ theme }) => theme.colors.color} 3px solid;\r\n  }\r\n`\r\n\r\nexport const CBGridRow = styled.div`\r\n  display: grid;\r\n  width: 100%;\r\n  color: ${({ theme }) => theme.colors.color};\r\n`\r\n\r\nexport const CBGridCell = styled.div`\r\n  width: 100%;\r\n  margin-bottom: 1rem;\r\n  > div {\r\n    border: 1px solid ${({ theme }) => theme.colors.border};\r\n    width: 100%;\r\n    height: 30px;\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 0 1rem;\r\n    box-sizing: border-box;\r\n    &:nth-child(2) {\r\n      &:hover {\r\n        border-color: ${({ theme }) => theme.colors.borderDark};\r\n      }\r\n    }\r\n    &:nth-child(1) {\r\n      border-left: 10px solid ${({ theme }) => theme.colors.border};\r\n      font-weight: 500;\r\n    }\r\n\r\n    // justify-content: center;\r\n  }\r\n`\r\n\r\nexport const CBInput = styled.input`\r\n  border: none;\r\n  outline: none;\r\n  height: 100%;\r\n  width: 100%;\r\n  font-family: inherit;\r\n`\r\nexport const CBSelect = styled.select`\r\n  border: none;\r\n  outline: none;\r\n  height: 100%;\r\n  width: 100%;\r\n  font-family: inherit;\r\n`\r\n\r\nexport const CBHelpTip = styled.div`\r\n  margin: auto;\r\n  text-align: center;\r\n  border: 2px solid ${({ theme }) => theme.colors.border};\r\n  border-radius: 50%;\r\n  width: 20px;\r\n  height: 20px;\r\n  font-size: 10px;\r\n  line-height: 20px;\r\n  cursor: pointer;\r\n\r\n  &:before {\r\n    content: '?';\r\n    font-family: sans-serif;\r\n    font-weight: 700;\r\n    font-size: 15px;\r\n    color: ${({ theme }) => theme.colors.highlight};\r\n  }\r\n\r\n  &:hover p {\r\n    display: block;\r\n\r\n    transform-origin: 100% 0%;\r\n    -webkit-animation: ${fadeIn} 0.3s ease;\r\n    animation: ${fadeIn} 0.3s ease;\r\n  }\r\n\r\n  p {\r\n    display: none;\r\n    font-family: sans-serif;\r\n    text-rendering: optimizeLegibility;\r\n    -webkit-font-smoothing: antialiased;\r\n    text-align: center;\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n    padding: 12px 16px;\r\n    z-index: 999999;\r\n    width: 178px;\r\n    height: auto;\r\n    position: absolute;\r\n    //   left: 80%;\r\n    transform: translate(-45%, 5%);\r\n    border-radius: 3px;\r\n    /* \tborder: 1px solid #E0E0E0; */\r\n    box-shadow: 0 0px 20px 0 rgba(0, 0, 0, 0.1);\r\n    color: ${({ theme }) => theme.colors.color};\r\n    font-size: 12px;\r\n    line-height: 18px;\r\n    z-index: 99;\r\n    a {\r\n      color: ${({ theme }) => theme.colors.highlight};\r\n      text-decoration: none;\r\n      &:hover {\r\n        text-decoration: underline;\r\n      }\r\n    }\r\n    &:before {\r\n      position: absolute;\r\n      content: '';\r\n      width: 0;\r\n      height: 0;\r\n      border: 10px solid transparent;\r\n      border-bottom-color: ${({ theme }) => theme.colors.border};\r\n      top: -9px;\r\n      left: 50%;\r\n      transform: translate(-50%, -50%);\r\n    }\r\n    &:after {\r\n      width: 10px;\r\n      height: 40px;\r\n      content: '';\r\n      position: absolute;\r\n      top: -40px;\r\n      left: 0;\r\n    }\r\n  }\r\n`\r\n\r\nconst modalShowStyle = css`\r\n  top: 0;\r\n`\r\nexport const CBModal = styled.div`\r\n  display: block;\r\n  position: fixed;\r\n\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw !important;\r\n  height: 100vh !important;\r\n  z-index: 999;\r\n  -webkit-backdrop-filter: blur(10px);\r\n  backdrop-filter: blur(10px);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  div {\r\n    overflow: hidden !important;\r\n    box-sizing: border-box;\r\n  }\r\n  > div {\r\n    background: ${({ theme }) => theme.colors.background};\r\n    border: 2px solid ${({ theme }) => theme.colors.border};\r\n    width: 90%;\r\n    height: 80%;\r\n    border-radius: 8px;\r\n    > div {\r\n      display: flex;\r\n      flex-direction: column;\r\n      box-sizing: border-box;\r\n      height: 100%;\r\n      padding: 1rem;\r\n    }\r\n  }\r\n\r\n  ${(props) => props.state === '1' && modalShowStyle}\r\n`\r\n\r\nexport const CBAttributeRow = styled.div`\r\n  cursor: pointer;\r\n  border-left: 4px solid transparent;\r\n  height: 40px;\r\n  padding: 0px 1rem;\r\n  &:hover {\r\n    border-color: ${({ theme }) => theme.colors.highlight};\r\n    background-color: ${({ theme }) => theme.colors.background};\r\n  }\r\n  > div {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`\r\nexport const CBTabContainer = styled.div`\r\n  display: flex;\r\n  ul {\r\n    display: flex;\r\n    flex-direction: column;\r\n    border-right: 1px solid ${({ theme }) => theme.colors.border};\r\n    padding: 0 1rem 0rem 0;\r\n  }\r\n  > div {\r\n    padding: 1rem;\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    > div {\r\n      overflow: auto !important;\r\n      > div {\r\n        &:nth-child(2) {\r\n          height: 100%;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport const CBFilterInput = styled.input`\r\n  font-size: 12px;\r\n  display: block;\r\n  width: 100%;\r\n  height: 36px;\r\n  padding: 0 20px;\r\n  background: ${({ theme }) => theme.colors.background};\r\n  color: ${({ theme }) => theme.colors.color};\r\n  border: 1px solid #3d85d8;\r\n  border-radius: 4px;\r\n  box-sizing: border-box;\r\n  &:focus {\r\n    outline: none;\r\n    ~ .cb_floating_label {\r\n      top: -8px;\r\n      font-size: 13px;\r\n    }\r\n  }\r\n`\r\n\r\nexport const CBTab = styled.div`\r\n  width: 100%;\r\n  padding: 25px;\r\n  font-family: sans-serif;\r\n  color: ${({ theme }) => theme.colors.color};\r\n  ul.inline {\r\n    list-style: none;\r\n    padding: 0;\r\n    margin-bottom: 0;\r\n    -webkit-margin-before: 0;\r\n    -webkit-margin-after: 0;\r\n    -webkit-margin-start: 0px;\r\n    -webkit-margin-end: 0px;\r\n    -webkit-padding-start: 0px;\r\n  }\r\n`\r\n\r\nexport const CBTabPanelList = styled.li`\r\n  display: inline-block;\r\n  margin-left: 0;\r\n  padding: 10px;\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.border};\r\n  transition: all 0.5s;\r\n  font-family: Lato, sans-serif;\r\n  font-weight: 300;\r\n  cursor: pointer;\r\n  text-transform: capitalize;\r\n  color: ${({ theme }) => theme.colors.color};\r\n  opacity: ${(props) => (props.selected ? '1' : '0.5')};\r\n  border-right: 4px solid\r\n    ${(props) =>\r\n      props.selected ? props.theme.colors.highlight : 'transparent'};\r\n`\r\n","import React, { Component, Fragment } from \"react\";\r\nimport {CBTab, CBTabPanelList} from './styled'\r\n\r\nclass Tabs extends Component {\r\n  state = {\r\n    selected: this.props.selected || 0\r\n  };\r\n\r\n  handleChange(index) {\r\n    this.setState({ selected: index });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <ul>\r\n          {this.props.children.map((elem, index) => {\r\n            return (\r\n              <CBTabPanelList\r\n                key={index}\r\n                selected= {index === this.state.selected}\r\n                onClick={() => this.handleChange(index)}\r\n              >\r\n                {elem.props.title}\r\n              </CBTabPanelList>\r\n            );\r\n          })}\r\n        </ul>\r\n        <CBTab>{this.props.children[this.state.selected]}</CBTab>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tabs;\r\n","import React from \"react\";\r\n\r\nexport default function Panel(props) {\r\n  console.log(\"Panel props.children: \", props.children);\r\n  return <div>{props.children}</div>;\r\n}\r\n","import * as React from 'react'\r\nimport { useState, useEffect, Fragment } from 'react'\r\n\r\nimport { Templates } from '../definitions'\r\n// https://www.w3schools.com/cssref/\r\n\r\nimport Tabs from './Tabs'\r\nimport Panel from './Panel'\r\nimport {\r\n  CBModal,\r\n  CBAttributeRow,\r\n  CBTabContainer,\r\n  CBFilterInput\r\n} from './styled'\r\n\r\nexport const PropertyBrowser = ({\r\n  selected,\r\n  onChange,\r\n  onClose,\r\n  show,\r\n  ...rest\r\n}) => {\r\n  const [allProps, setAllProps] = useState([])\r\n  const [sortedProps, setSortedProps] = useState({})\r\n\r\n  useEffect(() => {\r\n    let res = prepareList(Templates)\r\n    setSortedProps(res)\r\n  }, [])\r\n\r\n  const onRowClicked = (val) => {\r\n    if (onChange) {\r\n      onChange(val)\r\n    }\r\n  }\r\n\r\n  const onFilterTextChanged = (val) => {\r\n    setSortedProps(\r\n      prepareList(\r\n        Templates.filter((t) => {\r\n          return (\r\n            t.display.indexOf(val) > -1 ||\r\n            t.description.indexOf(val) > -1 ||\r\n            t.propertyName.indexOf(val) > -1\r\n          )\r\n        })\r\n      )\r\n    )\r\n  }\r\n\r\n  const prepareList = (list) => {\r\n    let res = {}\r\n    res['#All'] = {}\r\n    list.forEach((t) => {\r\n      const index = t.display.substring(0, 1)\r\n      res['#All'][index] = res['#All'][index] || []\r\n      res['#All'][index].push(t)\r\n      t.categories.forEach((c) => {\r\n        res[c] = res[c] || {}\r\n        res[c][index] = res[c][index] || []\r\n        res[c][index].push(t)\r\n      })\r\n    })\r\n    res = Object.keys(res)\r\n      .sort()\r\n      .reduce(function (result, key) {\r\n        result[key] = res[key]\r\n        return result\r\n      }, {})\r\n    return res\r\n  }\r\n\r\n  return (\r\n    <CBModal state={show ? '1' : '0'} onClick={() => onClose()}>\r\n      <div\r\n        onClick={(e) => {\r\n          e.stopPropagation()\r\n          e.preventDefault()\r\n        }}\r\n      >\r\n        <div>\r\n          <div style={{ display: 'flex', height: '70px' }}>\r\n            <div style={{ flex: 1 }}>\r\n              <h1> CSS Attribute Browser</h1>\r\n            </div>\r\n            <div>\r\n              <input type='button' value='close' onClick={() => onClose()} />{' '}\r\n            </div>\r\n          </div>\r\n          <div style={{ height: '60px' }}>\r\n            <CBFilterInput\r\n              type='text'\r\n              placeholder='FILTER'\r\n              onChange={(e) => onFilterTextChanged(e.target.value)}\r\n            />\r\n            {/* <label className={styles.cb_floating_label}>\r\n                                    Filter\r\n                                  </label> */}\r\n          </div>\r\n\r\n          <CBTabContainer style={{ flex: 1 }}>\r\n            <Tabs>\r\n              {Object.keys(sortedProps)\r\n                .sort()\r\n                .map((catkey, cati) => {\r\n                  return (\r\n                    <Panel title={catkey} key={cati}>\r\n                      <div style={{ overflow: 'auto !important' }}>\r\n                        {Object.keys(sortedProps[catkey])\r\n                          .sort()\r\n                          .map((index, indexi) => {\r\n                            return (\r\n                              <div key={indexi}>\r\n                                <div>\r\n                                  <label>{index}</label>\r\n                                </div>\r\n                                <div>\r\n                                  {sortedProps[catkey][index].map((c, ci) => {\r\n                                    return (\r\n                                      <CBAttributeRow\r\n                                        style={{ display: 'flex' }}\r\n                                        onClick={() => onRowClicked(c)}\r\n                                        key={ci}\r\n                                      >\r\n                                        <div style={{ width: '20%' }}>\r\n                                          {c.display}\r\n                                        </div>\r\n                                        <div style={{ flex: 1 }}>\r\n                                          {c.description}\r\n                                        </div>\r\n                                      </CBAttributeRow>\r\n                                    )\r\n                                  })}\r\n                                </div>\r\n                              </div>\r\n                            )\r\n                          })}\r\n                      </div>\r\n                    </Panel>\r\n                  )\r\n                })}\r\n            </Tabs>\r\n          </CBTabContainer>\r\n        </div>\r\n      </div>\r\n    </CBModal>\r\n  )\r\n}\r\n","import { useState, useEffect, Fragment } from \"react\";\r\nimport React from \"react\";\r\nimport {CBGridRow, CBGridCell, CBInput, CBSelect, CBHelpTip} from './styled'\r\n\r\nexport const ControlTemplate = ({field, onChange}) => {\r\n  const [fieldData, setFieldData] = useState({});\r\n  const [subFiledValues, setSubFieldValues] = useState([]);\r\n  useEffect(() => {\r\n    setFieldData(field || {});\r\n  }, [field])\r\n\r\n  const onPropertyValueChange = (value) => {\r\n      fieldData.value = value;\r\n      setFieldData({...fieldData});\r\n      if(onChange) {\r\n        if(typeof (fieldData.value) === 'string' && fieldData.value.indexOf(\"{\") === 0) {\r\n          const v =  JSON.parse(fieldData.value)\r\n          if(typeof (v.value) === 'string' && v.value.indexOf(\"{\")) {\r\n          } else {\r\n            onChange((fieldData.valuetemplate || '{0}').replace(`{${0}}`, v.value))  \r\n          }\r\n          \r\n        }\r\n        else {\r\n          onChange((fieldData.valuetemplate || '{0}').replace(`{${0}}`, value))  \r\n        }\r\n      }\r\n  }\r\n\r\n  const onSubControlValueChanged = (control, value, index, f) => {\r\n    let res = f.valuetemplate || \"{0}\";\r\n    for(var i =0; i<= index; i++) {\r\n      subFiledValues[i] = subFiledValues[i] || '';\r\n    }\r\n    subFiledValues[index] = value;\r\n    \r\n    for(var j =0; j< subFiledValues.length; j++) {\r\n      res = res.replace(`{${j}}`, subFiledValues[j]);\r\n    }\r\n    if(onChange) {\r\n      onChange(res);\r\n    }\r\n  }\r\n\r\n  const getSubControls =() => {\r\n    const res = [];\r\n    if(fieldData.value && typeof (fieldData.value) === 'string' && fieldData.value.indexOf(\"{\") === 0) {\r\n      const obj = JSON.parse(fieldData.value);\r\n      obj.value.controls.forEach((c, ci) => {\r\n        res.push(<ControlTemplate field={c} onChange={(val) => {\r\n          onSubControlValueChanged(c, val, ci, obj)\r\n        }}/>)\r\n      })\r\n   }\r\n   return res;\r\n  }\r\n\r\n  const getControl = () => {\r\n    let res = []\r\n    let output = [];\r\n    switch (fieldData.type) {\r\n      case 'select':\r\n        output.push(\r\n          <div className='cb-floating-label-content' style={{ flex: 1 }}>\r\n            <CBSelect\r\n              className='cb-floating-select'\r\n              value={fieldData.value}\r\n              onChange={(e) =>\r\n                onPropertyValueChange(\r\n                  e.target.value,\r\n                )\r\n              }\r\n              style={{ width: '100%' }}\r\n            >\r\n              {fieldData.options.map((o, oi) => {\r\n                return (\r\n                  <option value={typeof(o.value) === 'object'? JSON.stringify(o) : o.value} key={oi}>\r\n                    {`${o.name}`}\r\n                    {/* [value: \"${typeof(o.value) === 'object'? 'custom' :o.value}\"] */}\r\n                  </option>\r\n                )\r\n              })}\r\n            </CBSelect>\r\n          </div>\r\n        )\r\n        break\r\n      case 'radio':\r\n        output.push(\r\n          <div className='radio-toolbar' style={{ flex: 1 }}>\r\n            {fieldData.options.map((o, oi) => {\r\n              return (\r\n                <Fragment key={oi}>\r\n                  <CBInput\r\n                    type='radio'\r\n                    id={`radio-${o.name}`}\r\n                    name={`radio-${o.name}`}\r\n                    value={o.value}\r\n                    checked={\r\n                      o.value ===\r\n                      fieldData.value\r\n                    }\r\n                  />\r\n                  <label for='radioBanana'>{o.name}</label>\r\n                </Fragment>\r\n              )\r\n            })}\r\n          </div>\r\n        )\r\n        break\r\n\r\n      case 'color':\r\n        output.push(\r\n          <div style={{ flex: 1 }}>\r\n            <CBInput\r\n              type='color'\r\n              id='favcolor'\r\n              name='favcolor'\r\n              value={fieldData.value}\r\n              style={{\r\n                padding: '0px',\r\n                border: 'none',\r\n                width: '100%',\r\n                height: '20px'\r\n              }}\r\n              onChange={(e) =>\r\n                onPropertyValueChange(\r\n                  e.target.value\r\n                )\r\n              }\r\n            />\r\n          </div>\r\n        )\r\n        break\r\n      case 'number':\r\n        output.push (\r\n          <div style={{ flex: 1 }}>\r\n            <CBInput\r\n              type='number'\r\n              id='favcolor'\r\n              name='favcolor'\r\n              value={fieldData.value}\r\n              onChange={(e) =>\r\n                onPropertyValueChange(\r\n                  e.target.value\r\n                )\r\n              }\r\n            />\r\n          </div>\r\n        )\r\n        break;\r\n      case 'range':\r\n        output.push(\r\n          <div style={{ flex: 1 }}>\r\n            <CBInput\r\n              type='range'\r\n              min={fieldData.min || '1'}\r\n              max={fieldData.max || '100'}\r\n              value={fieldData.value}\r\n              style={{ width: '100%' }}\r\n              onChange={(e) =>\r\n                onPropertyValueChange(\r\n                  e.target.value * (fieldData.multiplier || 1),\r\n                )\r\n              }\r\n            />\r\n          </div>\r\n        )\r\n        break\r\n\r\n      case 'text':\r\n        output.push (\r\n          <div style={{ flex: 1 }}>\r\n            <CBInput\r\n              type='text'\r\n              id='favcolor'\r\n              name='favcolor'\r\n              placeholder={fieldData.label}\r\n              value={fieldData.value}\r\n              onChange={(e) =>\r\n                onPropertyValueChange(\r\n                  e.target.value\r\n                )\r\n              }\r\n            />\r\n          </div>\r\n        )\r\n    }\r\n    res = res.concat([<CBGridCell>\r\n      <div style={{ flex: 1, display:'flex' }}><div style={{flex:1}}>{fieldData.label}</div>\r\n      \r\n      <CBHelpTip>\r\n        <p>{fieldData.description}<br />\r\n        <span style={{fontWeight: '500'}}>Default: </span>{fieldData.default}<br />\r\n\t      <a  href={fieldData.link || 'https://www.w3schools.com/cssref/'} target=\"_blank\">W3School Definition</a>\r\n    </p>\r\n</CBHelpTip>\r\n      </div>\r\n      <div>{output}</div>\r\n    </CBGridCell>])\r\n    res  = res.concat(getSubControls())\r\n    return res\r\n  }\r\n\r\n  const allcontrols = getControl()\r\n  return (\r\n    <CBGridRow style={{gridTemplateColumns: `repeat(${allcontrols.length}, 1fr)`}}>\r\n      {getControl()}\r\n    </CBGridRow>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {CBAccordion, CBToolbarButton, CBToolbarAnchor} from './styled'\r\n\r\nclass Accordion extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      index: typeof props.selectedIndex !== 'undefined' ? props.selectedIndex : -1\r\n    }\r\n    this.nodes = []\r\n  }\r\n\r\n  componentWillReceiveProps(props) {\r\n    if (typeof props.selectedIndex !== 'undefined' && this.state.index !== props.selectedIndex) {\r\n      this.toggle(props.selectedIndex)\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearTimeout(this.timeout)\r\n  }\r\n\r\n  toggle(index, click) {\r\n    clearTimeout(this.timeout)\r\n\r\n    if (click) {\r\n      if (this.props.onChange) this.props.onChange(index, this.state.index !== index, this.state.index !== index ? index : -1)\r\n      if (!this.props.changeOnClick) return\r\n    }\r\n\r\n    if (this.state.index > -1) {\r\n      const content = this.nodes[this.state.index].ref.children[1]\r\n      content.style.height = `${content.children[0].offsetHeight}px` // Set fixed height before collapse of current open item\r\n    }\r\n\r\n    if (this.state.index === index || index === -1) {\r\n      setTimeout(() => { this.setState({ index: -1 }) }, 50)\r\n    } else {\r\n      setTimeout(() => {\r\n        this.setState({ index })\r\n        this.timeout = setTimeout(() => {\r\n          this.nodes[index].ref.children[1].style.height = 'auto' // Set auto height after expand\r\n        }, this.props.transitionDuration)\r\n      }, 50)\r\n    }\r\n  }\r\n\r\n  getHeight(index) {\r\n    if (index === this.state.index) {\r\n      return this.nodes.length > index ? this.nodes[index].ref.children[1].children[0].offsetHeight : 'auto'\r\n    }\r\n    return 0\r\n  }\r\n\r\n  render() {\r\n    const style = {\r\n      overflow: 'hidden',\r\n      transition: `height ${this.props.transitionDuration}ms ${this.props.transitionTimingFunction}`\r\n    }\r\n    const nodes = React.Children.map(this.props.children, (child, index) => (\r\n      <div key={index} ref={div => { this.nodes[index] = { ref: div } }} className={this.state.index === index ? this.props.openClassName : ''} >\r\n        <div style={{display: 'flex', height: '100%', width: '100%', boxSizing:\"border-box\"}}>\r\n          <div style={{display:'flex', justifyContent:'center', alignItems: 'center', width: '50px', height: '100%'}}>\r\n          <div>\r\n\r\n          </div>\r\n          </div>\r\n          <div onClick={() => this.toggle(index, true)} style={{flex:1}}>\r\n            {child.props['data-header']}</div>\r\n          <div>\r\n            <CBToolbarAnchor href={child.props['help-link']} target=\"_blank\">Help</CBToolbarAnchor>\r\n            <CBToolbarButton type=\"button\" onClick={() => child.props['on-change-clicked']()}>Change</CBToolbarButton>\r\n            <CBToolbarButton type=\"button\" onClick={() => child.props['on-remove-clicked']()}>Remove</CBToolbarButton>\r\n          </div>\r\n        </div>\r\n        \r\n        <div style={{ ...style, height: this.getHeight(index) }}>{child}</div>\r\n      </div>\r\n    ))\r\n    return <CBAccordion>{nodes}</CBAccordion>\r\n  }\r\n}\r\n\r\nAccordion.defaultProps = {\r\n  transitionDuration: 500,\r\n  transitionTimingFunction: 'ease',\r\n  openClassName: 'open',\r\n  changeOnClick: true\r\n}\r\n\r\nexport default Accordion\r\n","export const dark = {\n  meta: {\n    name: 'dark',\n    displayName: 'Dark'\n  },\n  colors: {\n    background: '#121212',\n    color: '#FFF',\n    border: '#454545',\n    borderDark: '#202125',\n    highlight: '#7bc5ee',\n    button: {\n      borderColor: '#FFF'\n    },\n    accordion: {\n      background: '#121212',\n      shadow: '#FFF',\n      border: '#EFEFEF'\n    }\n  }\n}\n","export const chalk = {\n  meta: {\n    name: 'chalk',\n    displayName: 'Chalk'\n  },\n  colors: {\n    background: '#FFF',\n    color: '#454545',\n    border: '#cdcdcd',\n    borderDark: '#454545',\n    highlight: '#067df7',\n    button: {\n      borderColor: '#454545'\n    },\n    accordion: {\n      background: '#f9f9f9',\n      shadow: '#cdcdcd',\n      border: '#EFEFEF'\n    }\n  }\n}\n","import * as React from 'react'\r\nimport { useState, useEffect, Fragment } from 'react'\r\n// https://www.w3schools.com/cssref/\r\nimport { Templates } from './definitions'\r\nimport { PropertyBrowser } from './components/propertyBrowser'\r\nimport { ControlTemplate } from './components/control-template'\r\nimport './index.css'\r\nimport Accordion from './components/accordion'\r\nimport { CBSimpleButton } from './components/styled'\r\nimport { ThemeProvider } from 'styled-components'\r\nimport * as Themes from './themes'\r\n\r\nexport const CSSBuilder = ({\r\n  tags,\r\n  onChange,\r\n  inline,\r\n  baseTheme = 'chalk',\r\n  themeOverride = {},\r\n  config,\r\n  ...rest\r\n}) => {\r\n  const [allProps, setAllProps] = useState([])\r\n  const [showPropertyBorwser, setShowPropertyBorwser] = useState(false)\r\n  const [selectedProperty, setSelectedProperty] = useState(-1)\r\n  const [selectedIndex, setSelectedIndex] = useState(-1)\r\n  const [finalTheme, setFinalTheme] = React.useState({})\r\n  const [loading, setLoading] = React.useState(true)\r\n\r\n  useEffect(() => {\r\n    let defaultTheme = Themes[baseTheme]\r\n    const oTheme = themeOverride\r\n    defaultTheme = Object.assign(defaultTheme, oTheme)\r\n    setFinalTheme(defaultTheme)\r\n    setLoading(false)\r\n  }, [config])\r\n\r\n  const onRowAdd = () => {\r\n    setSelectedProperty(allProps.length)\r\n    setShowPropertyBorwser(true)\r\n  }\r\n\r\n  const onPropertyChange = (value) => {\r\n    setShowPropertyBorwser(false)\r\n    allProps[selectedProperty] = Templates.filter((f) => {\r\n      return f.name === value.name && f.propertyName === value.propertyName\r\n    })[0]\r\n\r\n    allProps[selectedProperty].controls.forEach((c) => {\r\n      c.value = c.default ? c.default : ''\r\n    })\r\n\r\n    setAllProps(JSON.parse(JSON.stringify(allProps)))\r\n    fireOnChange(allProps)\r\n    setSelectedIndex(selectedProperty)\r\n  }\r\n  const onPropertyValueChange = (value, controlindex, rowindex) => {\r\n    allProps[rowindex].controls[controlindex].value = `${\r\n      allProps[rowindex].controls[controlindex].prefix || ''\r\n    }${value}${allProps[rowindex].controls[controlindex].suffix || ''}`\r\n    setAllProps(allProps)\r\n    fireOnChange(allProps)\r\n  }\r\n\r\n  const camelCase = (input) => {\r\n    return input.toLowerCase().replace(/-(.)/g, function (match, group1) {\r\n      return group1.toUpperCase()\r\n    })\r\n  }\r\n\r\n  const fireOnChange = (styles) => {\r\n    let resStyle = inline ? {} : ''\r\n    styles.forEach((row) => {\r\n      if (Object.keys(row).length) {\r\n        const styleName = inline\r\n          ? camelCase(row.propertyName)\r\n          : row.propertyName\r\n        let styleValue = row.valuetemplate || '${0}'\r\n        row.controls.forEach((c, ci) => {\r\n          styleValue = styleValue.replace(`{${ci}}`, c.value || '')\r\n        })\r\n\r\n        if (inline) {\r\n          resStyle[styleName] = styleValue\r\n        } else {\r\n          resStyle = `${resStyle}${styleName}:${styleValue};}`\r\n        }\r\n      }\r\n    })\r\n    if (onChange) {\r\n      onChange(resStyle)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {loading ? null : (\r\n        <ThemeProvider theme={finalTheme}>\r\n          <div\r\n            style={{ height: '100%', display: 'flex', flexDirection: 'column' }}\r\n          >\r\n            <div style={{ overflow: 'auto', flex: 1 }}>\r\n              <Accordion\r\n                selectedIndex={selectedIndex}\r\n                onChange={(index, expanded, si) => setSelectedIndex(si)}\r\n              >\r\n                {allProps.map((prop, propi) => {\r\n                  return (\r\n                    <div\r\n                      data-header={`${prop.display || 'No attribute selected'}`}\r\n                      help-link={prop.link}\r\n                      on-remove-clicked={() => {\r\n                        allProps.splice(propi, 1)\r\n                        setAllProps(JSON.parse(JSON.stringify(allProps)))\r\n                        fireOnChange(allProps)\r\n                      }}\r\n                      on-change-clicked={() => {\r\n                        setSelectedProperty(propi)\r\n                        setShowPropertyBorwser(true)\r\n                      }}\r\n                    >\r\n                      {prop.controls.map((c, ci) => {\r\n                        return (\r\n                          <div style={{ flex: 1 }} key={ci}>\r\n                            <div style={{ display: 'flex' }}>\r\n                              <ControlTemplate\r\n                                field={c}\r\n                                onChange={(val) => {\r\n                                  onPropertyValueChange(val, ci, propi)\r\n                                }}\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        )\r\n                      })}\r\n                    </div>\r\n                  )\r\n                })}\r\n              </Accordion>\r\n            </div>\r\n            <div style={{ height: '40px' }}>\r\n              <CBSimpleButton\r\n                type='button'\r\n                value='Add'\r\n                onClick={() => onRowAdd()}\r\n                style={{ height: '40px' }}\r\n              />\r\n            </div>\r\n            {showPropertyBorwser ? (\r\n              <PropertyBrowser\r\n                show={showPropertyBorwser}\r\n                onChange={(val) => onPropertyChange(val)}\r\n                onClose={() => setShowPropertyBorwser(false)}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        </ThemeProvider>\r\n      )}\r\n    </Fragment>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\n\nimport { CSSBuilder } from 'css-builder'\nimport 'css-builder/dist/index.css'\n\n\nconst App = () => {\n  const [val, setVal] = useState({border:'1px'});\n\n  return (\n  <div className=\"page-top\">\n    <div class=\"header\">\n      <a class=\"logo\" href=\".page-top\">React CSS Builder</a>\n      <input class=\"menu-btn\" type=\"checkbox\" id=\"menu-btn\" />\n      <label class=\"menu-icon\" for=\"menu-btn\"><span class=\"navicon\"></span></label>\n      <ul class=\"menu\">\n        <li><a href=\"https://www.npmjs.com/package/react-ui-css-builder\" without rel=\"noopener noreferrer\" target=\"_blank\" class=\"link link-theme link-arrow\">NPM</a></li>\n        <li><a href=\"https://github.com/koustov/css-builder\" without rel=\"noopener noreferrer\" target=\"_blank\" class=\"link link-theme link-arrow\">Git</a></li>\n        <li><a href=\"https://github.com/koustov/css-builder\" without rel=\"noopener noreferrer\" target=\"_blank\" class=\"link link-theme link-arrow\">Star</a></li>\n      </ul>\n    </div>\n\n  <div className=\"wrapper main\">\n    \n    <div className=\"config\">\n      <div style={{border: \"1px solid #cdcdcd\", display:\"flex\", flexDirection:'column', height: '100%'}}>\n        <div style={{padding: \"1rem\", height: '100px'}}>\n  <h4>Styling Area</h4>\n  <pre>Currently completed only attributes starts with \"a\",\"c\" and \"d\"</pre>\n        </div>\n\n        <div style={{padding: '1rem', flex: 1, overflow:\"hidden\"}}><CSSBuilder inline onChange={(v) => {setVal(v)}}/></div></div>\n      </div>\n      \n    <div className=\"live-demo\">\n    <div style={{border: \"1px solid #cdcdcd\", display:\"flex\", flexDirection:'column', height: '100%'}}>\n    <div style={{padding: \"1rem\"}}>\n    <h4>Rendering Area</h4>\n        </div>\n        <div style={{display: 'flex', flexDirection: 'column', justifyContent: 'center', alignItems: 'center', padding: '1rem'}}>\n           <pre>\n        {JSON.stringify(val, null, 2)}\n      </pre>\n    <fieldset className=\"outer\">\n      <legend>Outer box</legend>\n      <div style={{flex:1, height: \"200px\",width: \"400px\", display: \"flex\"}}>\n    <fieldset className=\"target\" style={val}>\n      <legend>Target Box</legend>\n    <fieldset className=\"inner\">\n      <legend>Inner Box</legend>\n      <input type=\"text\" placeholder=\"[sample input]\"/>\n      </fieldset>\n      </fieldset>\n      </div>\n      </fieldset>\n    </div>\n    \n    \n      </div>\n        </div>\n    </div>\n \n    \n  </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}